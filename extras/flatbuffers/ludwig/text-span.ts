// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { FbVoid } from '../ludwig/fb-void.ts';
import { TextLink } from '../ludwig/text-link.ts';
import { TextSpans } from '../ludwig/text-spans.ts';


export enum TextSpan {
  NONE = 0,
  Plain = 1,
  Code = 2,
  Math = 3,
  Bold = 4,
  Italic = 5,
  Strikeout = 6,
  Spoiler = 7,
  Link = 8,
  SoftBreak = 9,
  HardBreak = 10,
  CustomEmoji = 11
}

export function unionToTextSpan(
  type: TextSpan,
  accessor: (obj:FbVoid|TextLink|TextSpans|string) => FbVoid|TextLink|TextSpans|string|null
): FbVoid|TextLink|TextSpans|string|null {
  switch(TextSpan[type]) {
    case 'NONE': return null; 
    case 'Plain': return accessor('') as string;
    case 'Code': return accessor('') as string;
    case 'Math': return accessor('') as string;
    case 'Bold': return accessor(new TextSpans())! as TextSpans;
    case 'Italic': return accessor(new TextSpans())! as TextSpans;
    case 'Strikeout': return accessor(new TextSpans())! as TextSpans;
    case 'Spoiler': return accessor(new TextSpans())! as TextSpans;
    case 'Link': return accessor(new TextLink())! as TextLink;
    case 'SoftBreak': return accessor(new FbVoid())! as FbVoid;
    case 'HardBreak': return accessor(new FbVoid())! as FbVoid;
    case 'CustomEmoji': return accessor('') as string;
    default: return null;
  }
}

export function unionListToTextSpan(
  type: TextSpan, 
  accessor: (index: number, obj:FbVoid|TextLink|TextSpans|string) => FbVoid|TextLink|TextSpans|string|null, 
  index: number
): FbVoid|TextLink|TextSpans|string|null {
  switch(TextSpan[type]) {
    case 'NONE': return null; 
    case 'Plain': return accessor(index, '') as string;
    case 'Code': return accessor(index, '') as string;
    case 'Math': return accessor(index, '') as string;
    case 'Bold': return accessor(index, new TextSpans())! as TextSpans;
    case 'Italic': return accessor(index, new TextSpans())! as TextSpans;
    case 'Strikeout': return accessor(index, new TextSpans())! as TextSpans;
    case 'Spoiler': return accessor(index, new TextSpans())! as TextSpans;
    case 'Link': return accessor(index, new TextLink())! as TextLink;
    case 'SoftBreak': return accessor(index, new FbVoid())! as FbVoid;
    case 'HardBreak': return accessor(index, new FbVoid())! as FbVoid;
    case 'CustomEmoji': return accessor(index, '') as string;
    default: return null;
  }
}
