// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'npm:flatbuffers';

export class PostStats {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PostStats {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPostStats(bb:flatbuffers.ByteBuffer, obj?:PostStats):PostStats {
  return (obj || new PostStats()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPostStats(bb:flatbuffers.ByteBuffer, obj?:PostStats):PostStats {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PostStats()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

latestComment():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

latestCommentNecro():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

descendantCount():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

childCount():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

upvotes():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

downvotes():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

karma():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startPostStats(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addLatestComment(builder:flatbuffers.Builder, latestComment:bigint) {
  builder.addFieldInt64(0, latestComment, BigInt('0'));
}

static addLatestCommentNecro(builder:flatbuffers.Builder, latestCommentNecro:bigint) {
  builder.addFieldInt64(1, latestCommentNecro, BigInt('0'));
}

static addDescendantCount(builder:flatbuffers.Builder, descendantCount:bigint) {
  builder.addFieldInt64(2, descendantCount, BigInt('0'));
}

static addChildCount(builder:flatbuffers.Builder, childCount:bigint) {
  builder.addFieldInt64(3, childCount, BigInt('0'));
}

static addUpvotes(builder:flatbuffers.Builder, upvotes:bigint) {
  builder.addFieldInt64(4, upvotes, BigInt('0'));
}

static addDownvotes(builder:flatbuffers.Builder, downvotes:bigint) {
  builder.addFieldInt64(5, downvotes, BigInt('0'));
}

static addKarma(builder:flatbuffers.Builder, karma:bigint) {
  builder.addFieldInt64(6, karma, BigInt('0'));
}

static endPostStats(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPostStats(builder:flatbuffers.Builder, latestComment:bigint, latestCommentNecro:bigint, descendantCount:bigint, childCount:bigint, upvotes:bigint, downvotes:bigint, karma:bigint):flatbuffers.Offset {
  PostStats.startPostStats(builder);
  PostStats.addLatestComment(builder, latestComment);
  PostStats.addLatestCommentNecro(builder, latestCommentNecro);
  PostStats.addDescendantCount(builder, descendantCount);
  PostStats.addChildCount(builder, childCount);
  PostStats.addUpvotes(builder, upvotes);
  PostStats.addDownvotes(builder, downvotes);
  PostStats.addKarma(builder, karma);
  return PostStats.endPostStats(builder);
}
}
