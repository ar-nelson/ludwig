namespace Ludwig;

enum ModState : ubyte { Visible, Flagged, Locked, Removed }

table Session {
  user: uint64;
  ip: string;
  user_agent: string;
  created_at: uint64;
  expires_at: uint64;
  remember: bool = false;
}

table User {
  name: string (required);
  display_name: string;
  bio_raw: string;
  bio_safe: string;
  actor_id: string;
  inbox_url: string;
  instance: uint64 = null;
  created_at: uint64;
  updated_at: uint64 = null;
  deleted_at: uint64 = null;
  avatar_url: string;
  banner_url: string;
  bot: bool = false;
  mod_state: ModState = Visible;
  mod_reason: string;
}

table UserStats {
  comment_count: uint64;
  comment_karma: int64;
  thread_count: uint64;
  thread_karma: int64;
}

struct Hash {
  bytes: [ubyte:32];
}
struct Salt {
  bytes: [ubyte:16];
}

table LocalUser {
  email: string;
  password_hash: Hash;
  password_salt: Salt;
  admin: bool = false;
  accepted_application: bool = false;
  email_verified: bool = false;
  open_links_in_new_tab: bool = false;
  send_notifications_to_email: bool = false;
  show_avatars: bool = true;
  show_bot_accounts: bool = true;
  show_new_post_notifs: bool = true;
  hide_cw_posts: bool = false;
  expand_cw_posts: bool = false;
  expand_cw_images: bool = false;
  show_read_posts: bool = true;
  show_karma: bool = true;
  javascript_enabled: bool = true;
  interface_language: string;
  theme: string;
  default_sort_type: ubyte = 0;
  default_comment_sort_type: ubyte = 0;
}

table Application {
  text: string (required);
  ip: string;
  user_agent: string;
}

table Board {
  name: string (required);
  display_name: string;
  actor_id: string;
  inbox_url: string;
  instance: uint64 = null;
  created_at: uint64;
  updated_at: uint64 = null;
  description_raw: string;
  description_safe: string;
  icon_url: string;
  banner_url: string;
  content_warning: string;
  restricted_posting: bool = false;
  approve_subscribe: bool = false;
  can_upvote: bool = true;
  can_downvote: bool = true;
  default_sort_type: ubyte = 0;
  default_comment_sort_type: ubyte = 0;
  mod_state: ModState = Visible;
  mod_reason: string;
}

table BoardStats {
  thread_count: uint64 = 0;
  comment_count: uint64 = 0;
  subscriber_count: uint64 = 0;
  users_active_half_year: uint32 = 0;
  users_active_month: uint32 = 0;
  users_active_week: uint32 = 0;
  users_active_day: uint32 = 0;
}

table LocalBoard {
  owner: uint64;
  federated: bool = true;
  private: bool = false;
  invite_required: bool = false;
  invite_mod_only: bool = false;
}

table Thread {
  author: uint64;
  board: uint64;
  title: string (required);
  created_at: uint64;
  updated_at: uint64 = null;
  instance: uint64 = null;
  activity_url: string;
  original_post_url: string;
  content_url: string;
  content_text_raw: string;
  content_text_safe: string;
  content_warning: string;
  mod_state: ModState = Visible;
  mod_reason: string;
  has_card: bool = false;
  fetch_tries: uint64 = 0;
  last_fetch_at: uint64 = null;
  card_title: string;
  card_description: string;
  card_image_url: string;
}

table PostStats {
  latest_comment: uint64 = 0;
  latest_comment_necro: uint64 = 0;
  descendant_count: uint64 = 0;
  child_count: uint64 = 0;
  upvotes: uint64 = 0;
  downvotes: uint64 = 0;
  karma: int64 = 0;
}

table Comment {
  author: uint64;
  parent: uint64;
  thread: uint64;
  created_at: uint64;
  updated_at: uint64 = null;
  instance: uint64 = null;
  activity_url: string;
  original_post_url: string;
  content_raw: string;
  content_safe: string (required);
  content_warning: string;
  mod_state: ModState = Visible;
  mod_reason: string;
}

enum MediaCategory : ubyte { Image, Audio, Video }

table Media {
  category: MediaCategory;
  mimetype: string;
  alt: string;
  blurhash: string;
}

enum ModActionType : byte {
  EditPost,
  HidePost,
  RemovePost,
  PurgePost,

  EditBoard,
  RemoveBoard,
  PurgeBoard,

  EditUser,
  TempBanUserFromBoard,
  PermBanUserFromBoard,
  TemBanUserFromInstance,
  PermBanUserFromInstance,
  PurgeUser
}

table ModAction {
  type: ModActionType;
  author: uint64;
  target: uint64;
  content: string;
}

table Report {
  post: uint64;
  author: uint64;
  created_at: uint64;
  content: string;
}

table Invite {
  created_at: uint64;
  expires_at: uint64;
  from: uint64;
  accepted_at: uint64 = null;
  to: uint64 = null;
}
