version: '3'

tasks:
  setup:
    desc: 🏗️ Set up Meson debug build directory in build/
    sources:
      - meson.build
      - src/meson.build
      - src/models/meson.build
      - src/static/meson.build
      - test/meson.build
      - vendor/meson.build
      - subprojects/meson.build
    cmds:
      - meson setup build --buildtype debug -Db_sanitize=address
    generates:
      - build/build.ninja
  setup-release:
    desc: 🏗️ Set up Meson release build directory in build.release/
    sources:
      - meson.build
      - src/meson.build
      - src/models/meson.build
      - src/static/meson.build
      - vendor/meson.build
      - subprojects/meson.build
    cmds:
      - meson setup build.release --buildtype release -Ddebug=false -Dthumbnail_avif=true -Dthumbnail_jxl=true -Dthumbnail_svg=true -Dthumbnail_pdf=true
    generates:
      - build.release/build.ninja
  build:
    desc: 🔧 Build in debug mode, along with unit tests, in build/
    deps:
      - setup
    sources:
      - src/**/*
      - test/**/*.c++
      - test/**/*.h++
      - test/meson.build
      - vendor/meson.build
      - subprojects/meson.build
      - meson.build
    cmds:
      - ninja -C build
    generates:
      - build/test/ludwig_test
      - build/ludwig
  build-release:
    desc: 🔧 Build in release mode, in build.release/
    deps:
      - setup-release
    sources:
      - src/**/*
      - vendor/meson.build
      - subprojects/meson.build
      - meson.build
    cmds:
      - ninja -C build.release
    generates:
      - build.release/ludwig
  test:
    desc: 🚨 Run the unit test suite
    deps:
      - build
    cmds:
      - "meson test -C build ludwig:"
  test-lldb:
    desc: 🚨 Run the unit test suite (in lldb)
    deps:
      - build
    cmds:
      - lldb -o run -- ./build/test/ludwig_test
  run:
    desc: ▶️ Run the debug build of Ludwig, with default settings
    deps:
      - build
    cmds:
      - ./build/ludwig
  run-release:
    desc: ▶️ Run the release build of Ludwig, with default settings
    deps:
      - build-release
    cmds:
      - ./build.release/ludwig
  gen-typescript-flatbuffers:
    desc: ⚙️ Generate TypesScript Flatbuffers files used by the scripts in extras/
    deps:
      - build
    sources:
      - src/models/*.fbs
    cmds:
      - ./build/subprojects/flatbuffers-*/flatc --ts --gen-all -o ./extras/flatbuffers src/models/ts-models.fbs
      - >
        find ./extras/flatbuffers -iname '*.ts' -exec sed -i -e "s/\\.js'/.ts'/g" -e "s/from 'flatbuffers'/from 'npm:flatbuffers'/g" {} \;
    env:
      ASAN_OPTIONS: detect_leaks=0
    generates:
      - ./extras/flatbuffers/ludwig.ts
  gen-random-db:
    desc: "⚙️ Generate a ludwig.db file with random test fixture data. ⚠️ WARNING: WILL DELETE AN EXISTING DB FILE! ⚠️"
    deps:
      - gen-typescript-flatbuffers
      - build
    cmds:
      - rm -f ludwig.mdb ludwig.mdb-lock search.mdb search.mdb-lock random.dbdump.zst
      - deno run extras/generate-mock-data.ts | zstd > random.dbdump.zst
      - ./build/ludwig --import random.dbdump.zst
  html-sample:
    sources:
      - extras/static-sample-server.ts
      - extras/sample.html
      - src/static/*
    cmds:
      - deno run --allow-read --allow-net ./extras/static-sample-server.ts
  clean:
    desc: 🧹 Delete all build directories
    cmds:
      - rm -rf build build.release
